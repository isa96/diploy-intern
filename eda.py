# -*- coding: utf-8 -*-
"""eda.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MHY5R7q2P3IQY3Zi7Rl4OcpdWo8LX1LR
"""

import warnings
from scipy.stats import shapiro
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.experimental import enable_iterative_imputer
from sklearn.impute import IterativeImputer

warnings.filterwarnings("ignore")

customer = pd.read_csv("./Dataset/Customer.csv", sep=";")
transaction = pd.read_csv("./Dataset/Transaction.csv", sep=";")
product = pd.read_csv("./Dataset/Product.csv", sep=";")
store = pd.read_csv("./Dataset/Store.csv", sep=";")

customer.head()

transaction.head()

product.head()

store.head()

df = pd.merge(transaction, customer, on="CustomerID")
df = pd.merge(df, product, on="ProductID", suffixes=("_cust", "_prod"))
df = pd.merge(df, store, on="StoreID")
df.head()

column_name = {}
for i in df.columns:
    column_name[i] = i.lower().replace(" ", "_")
df = df.rename(columns=column_name)
df.head()

df = df.drop(columns=["latitude", "longitude"])
df.head()

print(df.shape)

print(df.info())

df["date"] = pd.to_datetime(df["date"])
df["income"] = df["income"].map(lambda x: float(x.replace(",", ".")))

df.head()

df.isna().sum()

single_age = df[df["marital_status"] == "Single"]["age"]
married_age = df[df["marital_status"] == "Married"]["age"]

stat_single, p_single = shapiro(single_age)
stat_married, p_married = shapiro(married_age)

print("Shapiro-Wilk Test - Single: p-value =", p_single)
print("Shapiro-Wilk Test - Married: p-value =", p_married)

ALPHA = 0.05
p_list = [p_single, p_married]
for i in p_list:
    if i > ALPHA:
        print("Data is normally distributed")
    else:
        print("Data is not normally distributed")

fig, axes = plt.subplots(1, 1, figsize=(16, 9))
sns.boxplot(y="age", x="marital_status", data=df, orient="v")

plt.show()

df_impute = df[["age", "gender", "income", "marital_status"]]
df_impute["marital_status"] = df_impute["marital_status"].map(
    {"Married": 0, "Single": 1}
)

imputer = IterativeImputer(initial_strategy="median", random_state=0)
df_impute = imputer.fit_transform(df_impute)
df_impute = pd.DataFrame(
    data=df_impute, columns=["age", "gender", "income", "marital_status"]
)

print("Null check :", df_impute.isna().sum().sum())
print("")
print("Data size :", df_impute.shape)

df["marital_status"] = df_impute["marital_status"].astype("int")
df.isna().sum()

df.head()

# df.to_csv("clean-data.csv", index=False)
